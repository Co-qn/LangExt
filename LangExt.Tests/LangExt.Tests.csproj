<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <OldToolsVersion>4.0</OldToolsVersion>
    <UpgradeBackupLocation />
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{850CD15D-E125-42D0-9501-D3A9CF3DEB10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LangExt.Tests</RootNamespace>
    <AssemblyName>LangExt.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TransformOnBuild>true</TransformOnBuild>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="nunit.framework, Version=2.6.2.12296, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.2.6.2\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ApplicativeTest.cs" />
    <Compile Include="CachedSeqTest.cs" />
    <Compile Include="ChoiceTest.cs" />
    <Compile Include="FuncConvTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FuncConvTest.tt</DependentUpon>
    </Compile>
    <Compile Include="FuncCreateTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FuncCreateTest.tt</DependentUpon>
    </Compile>
    <Compile Include="FuncCurryTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FuncCurryTest.tt</DependentUpon>
    </Compile>
    <Compile Include="FuncOptionTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FuncOptionTest.tt</DependentUpon>
    </Compile>
    <Compile Include="FuncTest.cs" />
    <Compile Include="IntWithUnitTest.cs" />
    <Compile Include="ObjectModuleDragonTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ObjectModuleDragonTest.tt</DependentUpon>
    </Compile>
    <Compile Include="ObjectModuleTest.cs" />
    <Compile Include="OptionDragonTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>OptionDragonTest.tt</DependentUpon>
    </Compile>
    <Compile Include="OptionTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="QueryExprTest.cs" />
    <Compile Include="RangeTest.cs" />
    <Compile Include="ResultDragonTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ResultDragonTest.tt</DependentUpon>
    </Compile>
    <Compile Include="ResultTest.cs" />
    <Compile Include="SeqDragonTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SeqDragonTest.tt</DependentUpon>
    </Compile>
    <Compile Include="SeqTest.cs" />
    <Compile Include="SeqZipTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SeqZipTest.tt</DependentUpon>
    </Compile>
    <Compile Include="TryFuncTest.cs" />
    <Compile Include="TupleModuleTest.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>TupleModuleTest.tt</DependentUpon>
    </Compile>
    <Compile Include="FuncResultTest.cs">
      <DependentUpon>FuncResultTest.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LangExt\LangExt.csproj">
      <Project>{569b25f1-b14b-4e9c-a8f1-5c72828ebf4d}</Project>
      <Name>LangExt</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="FuncConvTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FuncConvTest.cs</LastGenOutput>
    </None>
    <None Include="FuncCreateTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FuncCreateTest.cs</LastGenOutput>
    </None>
    <None Include="FuncCurryTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FuncCurryTest.cs</LastGenOutput>
    </None>
    <None Include="FuncOptionTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FuncOptionTest.cs</LastGenOutput>
    </None>
    <None Include="ObjectModuleDragonTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ObjectModuleDragonTest.cs</LastGenOutput>
    </None>
    <None Include="OptionDragonTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>OptionDragonTest.cs</LastGenOutput>
    </None>
    <None Include="packages.config" />
    <None Include="ResultDragonTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ResultDragonTest.cs</LastGenOutput>
    </None>
    <None Include="SeqDragonTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SeqDragonTest.cs</LastGenOutput>
    </None>
    <None Include="SeqZipTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SeqZipTest.cs</LastGenOutput>
    </None>
    <None Include="TupleModuleTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>TupleModuleTest.cs</LastGenOutput>
    </None>
    <None Include="FuncResultTest.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FuncResultTest.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\TextTemplating\Microsoft.TextTemplating.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\TextTemplating\Microsoft.TextTemplating.targets" Condition="false" />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>